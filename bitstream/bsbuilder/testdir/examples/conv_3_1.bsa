F1000015 00000007
# data[(15, 0)] : init `data1` reg with const `7`

FF000015 0002F00B
# data[(5, 0)] : alu_op = mul
# data[(6, 6)] : unsigned=0x0
# data[(15, 12] : flag_sel: PE_FLAG_PE=0xF
# data[(17, 16)]: data0: REG_BYPASS=0x2
# data[(19, 18)]: data1: REG_CONST= 0x0

00020015 00000000
# data[(3, 0)] : @ tile (2, 2) connect wire 0 (in_BUS16_S2_T0) to data0

00080015 0000C001
# data[(1, 0)] : @ tile (2, 2) connect wire 1 (in_BUS16_S2_T0) to out_BUS16_S0_T0
# data[(15, 14)] : @ tile (2, 2) connect wire 3 (pe_out_res) to out_BUS16_S1_T2

00080016 00000001
# data[(1, 0)] : @ tile (2, 3) connect wire 1 (in_BUS16_S2_T0) to out_BUS16_S0_T0

00080017 00000001
# data[(1, 0)] : @ tile (2, 4) connect wire 1 (in_BUS16_S2_T0) to out_BUS16_S0_T0

00000018 00000000
# data[(32, 30)] : @ tile (2, 5) connect wire 0 (in_0_BUS1_0_0) to out_0_BUS1_2_0 (REG 00)
# da99[(31, 30)] : REG_FIELD_HACK (bsbuilder.py) hand-written code above

01000018 00000000
# data[(32, 30)] : @ tile (2, 5) connect wire 0 (in_0_BUS1_0_0) to out_0_BUS1_2_0 (REG 01)
# da99[(32, 32)] : REG_FIELD_HACK (bsbuilder.py) hand-written code above

00030018 00C00C01
# data[(1, 0)] : @ tile (2, 5) connect wire 1 (in_1_BUS16_S2_T0) to out_1_BUS16_S0_T0
# data[(11, 10)] : @ tile (2, 5) connect wire 3 (rdata) to out_1_BUS16_S1_T0
# data[(23, 22)] : @ tile (2, 5) connect wire 3 (rdata) to out_1_BUS16_S2_T1

00040018 00000054
# data[(1, 0)] : mode = linebuffer
# data[(2, 2)] : tile_en = 1
# data[(15, 3)] : fifo_depth = 10
# data[(18, 16)] : almost_full_count = 0
# data[(19, 19)] : chain_enable = 0

000B0018 00000000
# data[(3, 0)] : @ tile (2, 5) connect wire 0 (in_0_BUS16_S2_T0) to wdata

000E0018 00000005
# data[(3, 0)] : @ tile (2, 5) connect wire 5 (out_0_BUS1_S2_T0) to wen

00000019 000000FF
# data[(7, 0)] : lut_value = 0xFF

F3000019 00000000
# data[(0, 0)] : init `bit0` reg with const `0`

F4000019 00000000
# data[(0, 0)] : init `bit1` reg with const `0`

F5000019 00000000
# data[(0, 0)] : init `bit2` reg with const `0`

FF000019 0000E00E
# data[(5, 0)] : alu_op = lut ; 0xE
# data[(6, 6)] : unsigned=0x0
# data[(15, 12] : flag_sel: PE_FLAG_LUT=0xE
# data[(25, 24)]: bit0: REG_CONST= 0x0
# data[(27, 26)]: bit1: REG_CONST= 0x0
# data[(29, 28)]: bit2: REG_CONST= 0x0

00090019 00300000
# data[(21, 20)] : @ tile (2, 6) connect wire 3 (pe_out_res_p) to out_BUS1_S2_T0

0003001C 00000001
# data[(1, 0)] : @ tile (2, 9) connect wire 1 (in_1_BUS16_S2_T0) to out_1_BUS16_S0_T0

00030020 00000001
# data[(1, 0)] : @ tile (2, 13) connect wire 1 (in_1_BUS16_S2_T0) to out_1_BUS16_S0_T0

00020024 00000000
# data[(1, 0)] : @ tile (2, 17) connect wire 0 (sb_wire_out_1_BUS16_S3_T0) to out_0_BUS16_S0_T0

00030024 80000000
# data[(31, 30)] : @ tile (2, 17) connect wire 2 (in_1_BUS16_S2_T0) to sb_wire_out_1_BUS16_S3_T0

00080028 00000020
# data[(5, 4)] : @ tile (3, 2) connect wire 2 (in_BUS16_S3_T2) to out_BUS16_S0_T2

FF000029 000AF000
# data[(5, 0)] : alu_op = add
# data[(6, 6)] : unsigned=0x0
# data[(15, 12] : flag_sel: PE_FLAG_PE=0xF
# data[(17, 16)]: data0: REG_BYPASS=0x2
# data[(19, 18)]: data1: REG_BYPASS=0x2

00020029 00000005
# data[(3, 0)] : @ tile (3, 3) connect wire 5 (out_BUS16_S2_T0) to data0

00030029 00000007
# data[(3, 0)] : @ tile (3, 3) connect wire 7 (out_BUS16_S1_T2) to data1

00080029 00104003
# data[(1, 0)] : @ tile (3, 3) connect wire 3 (pe_out_res) to out_BUS16_S0_T0
# data[(15, 14)] : @ tile (3, 3) connect wire 1 (in_BUS16_S2_T2) to out_BUS16_S1_T2
# data[(21, 20)] : @ tile (3, 3) connect wire 1 (in_BUS16_S1_T0) to out_BUS16_S2_T0

F100002A 00000005
# data[(15, 0)] : init `data1` reg with const `5`

FF00002A 0002F00B
# data[(5, 0)] : alu_op = mul
# data[(6, 6)] : unsigned=0x0
# data[(15, 12] : flag_sel: PE_FLAG_PE=0xF
# data[(17, 16)]: data0: REG_BYPASS=0x2
# data[(19, 18)]: data1: REG_CONST= 0x0

0002002A 00000006
# data[(3, 0)] : @ tile (3, 4) connect wire 6 (out_BUS16_S2_T1) to data0

0008002A 00003001
# data[(1, 0)] : @ tile (3, 4) connect wire 1 (in_BUS16_S2_T0) to out_BUS16_S0_T0
# data[(13, 12)] : @ tile (3, 4) connect wire 3 (pe_out_res) to out_BUS16_S1_T1
# data[(23, 22)] : @ tile (3, 4) connect wire 0 (in_BUS16_S0_T1) to out_BUS16_S2_T1

0008002C 00000001
# data[(1, 0)] : @ tile (3, 6) connect wire 1 (in_BUS16_S2_T0) to out_BUS16_S0_T0

0008002D 00000001
# data[(1, 0)] : @ tile (3, 7) connect wire 1 (in_BUS16_S2_T0) to out_BUS16_S0_T0

0008002E 00000001
# data[(1, 0)] : @ tile (3, 8) connect wire 1 (in_BUS16_S2_T0) to out_BUS16_S0_T0

00080030 00000001
# data[(1, 0)] : @ tile (3, 10) connect wire 1 (in_BUS16_S2_T0) to out_BUS16_S0_T0

00080031 00000001
# data[(1, 0)] : @ tile (3, 11) connect wire 1 (in_BUS16_S2_T0) to out_BUS16_S0_T0

00080032 00000001
# data[(1, 0)] : @ tile (3, 12) connect wire 1 (in_BUS16_S2_T0) to out_BUS16_S0_T0

00080034 00000001
# data[(1, 0)] : @ tile (3, 14) connect wire 1 (in_BUS16_S2_T0) to out_BUS16_S0_T0

00080035 00000001
# data[(1, 0)] : @ tile (3, 15) connect wire 1 (in_BUS16_S2_T0) to out_BUS16_S0_T0

00080036 00000001
# data[(1, 0)] : @ tile (3, 16) connect wire 1 (in_BUS16_S2_T0) to out_BUS16_S0_T0

FF00003B 000AF000
# data[(5, 0)] : alu_op = add
# data[(6, 6)] : unsigned=0x0
# data[(15, 12] : flag_sel: PE_FLAG_PE=0xF
# data[(17, 16)]: data0: REG_BYPASS=0x2
# data[(19, 18)]: data1: REG_BYPASS=0x2

0002003B 00000009
# data[(3, 0)] : @ tile (4, 3) connect wire 9 (out_BUS16_S2_T4) to data0

0003003B 00000006
# data[(3, 0)] : @ tile (4, 3) connect wire 6 (out_BUS16_S1_T1) to data1

0008003B D0000000
# data[(13, 12)] : @ tile (4, 3) connect wire 0 (in_BUS16_S0_T1) to out_BUS16_S1_T1
# data[(29, 28)] : @ tile (4, 3) connect wire 1 (in_BUS16_S1_T4) to out_BUS16_S2_T4
# data[(31, 30)] : @ tile (4, 3) connect wire 3 (pe_out_res) to out_BUS16_S3_T0

0008003C 00800000
# data[(23, 22)] : @ tile (4, 4) connect wire 2 (in_BUS16_S3_T1) to out_BUS16_S2_T1

0000003D 00000000
# data[(32, 30)] : @ tile (4, 5) connect wire 0 (in_0_BUS1_0_0) to out_0_BUS1_2_0 (REG 00)
# da99[(31, 30)] : REG_FIELD_HACK (bsbuilder.py) hand-written code above

0100003D 00000000
# data[(32, 30)] : @ tile (4, 5) connect wire 0 (in_0_BUS1_0_0) to out_0_BUS1_2_0 (REG 01)
# da99[(32, 32)] : REG_FIELD_HACK (bsbuilder.py) hand-written code above

0002003D 00200000
# data[(21, 20)] : @ tile (4, 5) connect wire 2 (in_0_BUS16_S3_T0) to out_0_BUS16_S2_T0

0003003D 03000000
# data[(25, 24)] : @ tile (4, 5) connect wire 3 (rdata) to out_1_BUS16_S2_T2

0004003D 00000054
# data[(1, 0)] : mode = linebuffer
# data[(2, 2)] : tile_en = 1
# data[(15, 3)] : fifo_depth = 10
# data[(18, 16)] : almost_full_count = 0
# data[(19, 19)] : chain_enable = 0

000B003D 00000005
# data[(3, 0)] : @ tile (4, 5) connect wire 5 (out_0_BUS16_S2_T0) to wdata

000E003D 00000005
# data[(3, 0)] : @ tile (4, 5) connect wire 5 (out_0_BUS1_S2_T0) to wen

0000003E 000000FF
# data[(7, 0)] : lut_value = 0xFF

F300003E 00000000
# data[(0, 0)] : init `bit0` reg with const `0`

F400003E 00000000
# data[(0, 0)] : init `bit1` reg with const `0`

F500003E 00000000
# data[(0, 0)] : init `bit2` reg with const `0`

FF00003E 0000E00E
# data[(5, 0)] : alu_op = lut ; 0xE
# data[(6, 6)] : unsigned=0x0
# data[(15, 12] : flag_sel: PE_FLAG_LUT=0xE
# data[(25, 24)]: bit0: REG_CONST= 0x0
# data[(27, 26)]: bit1: REG_CONST= 0x0
# data[(29, 28)]: bit2: REG_CONST= 0x0

0009003E 00300000
# data[(21, 20)] : @ tile (4, 6) connect wire 3 (pe_out_res_p) to out_BUS1_S2_T0

F100004D 00000000
# data[(15, 0)] : init `data1` reg with const `0`

FF00004D 0002F000
# data[(5, 0)] : alu_op = add
# data[(6, 6)] : unsigned=0x0
# data[(15, 12] : flag_sel: PE_FLAG_PE=0xF
# data[(17, 16)]: data0: REG_BYPASS=0x2
# data[(19, 18)]: data1: REG_CONST= 0x0

0002004D 00000008
# data[(3, 0)] : @ tile (5, 3) connect wire 8 (out_BUS16_S2_T3) to data0

0008004D 00000000
# data[(27, 26)] : @ tile (5, 3) connect wire 0 (in_BUS16_S0_T3) to out_BUS16_S2_T3

0108004D 000000C0
# data[(39, 38)] : @ tile (5, 3) connect wire 3 (pe_out_res) to out_BUS16_S3_T4

F100004E 00000003
# data[(15, 0)] : init `data1` reg with const `3`

FF00004E 0002F00B
# data[(5, 0)] : alu_op = mul
# data[(6, 6)] : unsigned=0x0
# data[(15, 12] : flag_sel: PE_FLAG_PE=0xF
# data[(17, 16)]: data0: REG_BYPASS=0x2
# data[(19, 18)]: data1: REG_CONST= 0x0

0002004E 00000007
# data[(3, 0)] : @ tile (5, 4) connect wire 7 (out_BUS16_S2_T2) to data0

0008004E 0C000000
# data[(25, 24)] : @ tile (5, 4) connect wire 0 (in_BUS16_S0_T2) to out_BUS16_S2_T2
# data[(27, 26)] : @ tile (5, 4) connect wire 3 (pe_out_res) to out_BUS16_S2_T3

# INPUT  tile  21 ( 2, 2) / in_BUS16_S2_T0 / wire_2_1_BUS16_S0_T0
# OUTPUT tile  36 ( 2,17) / out_0_BUS16_S0_T0 / wire_2_17_BUS16_S0_T0

# Configure side 0 (right side) io1bit tiles as 16bit output bus;
# assumes output is tile 36 (io16bit_0x24)

00000026 00000001
00000038 00000001
0000004A 00000001
0000005C 00000001
0000006E 00000001
00000080 00000001
00000092 00000001
000000A4 00000001
000000B6 00000001
000000C8 00000001
000000DA 00000001
000000EC 00000001
000000FE 00000001
00000110 00000001
00000122 00000001
00000134 00000001

