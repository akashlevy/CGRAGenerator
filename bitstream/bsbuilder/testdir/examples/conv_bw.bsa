F1000015 00000013
# data[(15, 0)] : init `data1` reg with const `19`

FF000015 0002F00B
# data[(5, 0)] : alu_op = mul
# data[(6, 6)] : unsigned=0x0
# data[(15, 12] : flag_sel: PE_FLAG_PE=0xF
# data[(17, 16)]: data0: REG_BYPASS=0x2
# data[(19, 18)]: data1: REG_CONST= 0x0

00020015 00000000
# data[(3, 0)] : @ tile (2, 2) connect wire 0 (in_BUS16_S2_T0) to data0

00080015 00000701
# data[(1, 0)] : @ tile (2, 2) connect wire 1 (in_BUS16_S2_T0) to out_BUS16_S0_T0
# data[(9, 8)] : @ tile (2, 2) connect wire 3 (pe_out_res) to out_BUS16_S0_T4
# data[(11, 10)] : @ tile (2, 2) connect wire 1 (in_BUS16_S2_T0) to out_BUS16_S1_T0

01080015 00002000
# data[(45, 45)] : @ tile (2, 2) latch output wire out_BUS16_S1_T0

F1000016 00000010
# data[(15, 0)] : init `data1` reg with const `16`

FF000016 0002F00B
# data[(5, 0)] : alu_op = mul
# data[(6, 6)] : unsigned=0x0
# data[(15, 12] : flag_sel: PE_FLAG_PE=0xF
# data[(17, 16)]: data0: REG_BYPASS=0x2
# data[(19, 18)]: data1: REG_CONST= 0x0

00020016 00000005
# data[(3, 0)] : @ tile (2, 3) connect wire 5 (out_BUS16_S2_T0) to data0

00080016 00100D01
# data[(1, 0)] : @ tile (2, 3) connect wire 1 (in_BUS16_S2_T0) to out_BUS16_S0_T0
# data[(9, 8)] : @ tile (2, 3) connect wire 1 (in_BUS16_S2_T4) to out_BUS16_S0_T4
# data[(11, 10)] : @ tile (2, 3) connect wire 3 (pe_out_res) to out_BUS16_S1_T0
# data[(21, 20)] : @ tile (2, 3) connect wire 1 (in_BUS16_S1_T0) to out_BUS16_S2_T0

F1000017 00000012
# data[(15, 0)] : init `data1` reg with const `18`

FF000017 0002F00B
# data[(5, 0)] : alu_op = mul
# data[(6, 6)] : unsigned=0x0
# data[(15, 12] : flag_sel: PE_FLAG_PE=0xF
# data[(17, 16)]: data0: REG_BYPASS=0x2
# data[(19, 18)]: data1: REG_CONST= 0x0

00020017 00000006
# data[(3, 0)] : @ tile (2, 4) connect wire 6 (out_BUS16_S2_T1) to data0

00080017 00043001
# data[(1, 0)] : @ tile (2, 4) connect wire 1 (in_BUS16_S2_T0) to out_BUS16_S0_T0
# data[(13, 12)] : @ tile (2, 4) connect wire 3 (pe_out_res) to out_BUS16_S1_T1
# data[(19, 18)] : @ tile (2, 4) connect wire 1 (in_BUS16_S2_T4) to out_BUS16_S1_T4
# data[(23, 22)] : @ tile (2, 4) connect wire 0 (in_BUS16_S0_T1) to out_BUS16_S2_T1

00000018 00000000
# data[(32, 30)] : @ tile (2, 5) connect wire 0 (in_0_BUS1_0_0) to out_0_BUS1_2_0 (REG 00)
# da99[(31, 30)] : REG_FIELD_HACK (bsbuilder.py) hand-written code above

01000018 00000000
# data[(32, 30)] : @ tile (2, 5) connect wire 0 (in_0_BUS1_0_0) to out_0_BUS1_2_0 (REG 01)
# da99[(32, 32)] : REG_FIELD_HACK (bsbuilder.py) hand-written code above

00020018 00C00030
# data[(5, 4)] : @ tile (2, 5) connect wire 3 (rdata) to out_0_BUS16_S0_T2
# data[(23, 22)] : @ tile (2, 5) connect wire 3 (rdata) to out_0_BUS16_S2_T1

01020018 00000400
# data[(42, 42)] : @ tile (2, 5) latch output wire out_0_BUS16_S0_T2

00030018 00000C00
# data[(11, 10)] : @ tile (2, 5) connect wire 3 (rdata) to out_1_BUS16_S1_T0
# data[(25, 24)] : @ tile (2, 5) connect wire 0 (in_1_BUS16_S0_T2) to out_1_BUS16_S2_T2
# data[(27, 26)] : @ tile (2, 5) connect wire 0 (in_1_BUS16_S0_T3) to out_1_BUS16_S2_T3

00040018 00000204
# data[(1, 0)] : mode = linebuffer
# data[(2, 2)] : tile_en = 1
# data[(15, 3)] : fifo_depth = 64
# data[(18, 16)] : almost_full_count = 0
# data[(19, 19)] : chain_enable = 0

000B0018 00000000
# data[(3, 0)] : @ tile (2, 5) connect wire 0 (in_0_BUS16_S2_T0) to wdata

000E0018 00000005
# data[(3, 0)] : @ tile (2, 5) connect wire 5 (out_0_BUS1_S2_T0) to wen

00000019 000000FF
# data[(7, 0)] : lut_value = 0xFF

F3000019 00000000
# data[(0, 0)] : init `bit0` reg with const `0`

F4000019 00000000
# data[(0, 0)] : init `bit1` reg with const `0`

F5000019 00000000
# data[(0, 0)] : init `bit2` reg with const `0`

FF000019 0000E00E
# data[(5, 0)] : alu_op = lut ; 0xE
# data[(6, 6)] : unsigned=0x0
# data[(15, 12] : flag_sel: PE_FLAG_LUT=0xE
# data[(25, 24)]: bit0: REG_CONST= 0x0
# data[(27, 26)]: bit1: REG_CONST= 0x0
# data[(29, 28)]: bit2: REG_CONST= 0x0

00080019 00004000
# data[(15, 14)] : @ tile (2, 6) connect wire 1 (in_BUS16_S2_T2) to out_BUS16_S1_T2

00090019 00300000
# data[(21, 20)] : @ tile (2, 6) connect wire 3 (pe_out_res_p) to out_BUS1_S2_T0

00020024 00000000
# data[(1, 0)] : @ tile (2, 17) connect wire 0 (sb_wire_out_1_BUS16_S3_T0) to out_0_BUS16_S0_T0

00030024 40000000
# data[(31, 30)] : @ tile (2, 17) connect wire 1 (in_1_BUS16_S1_T0) to sb_wire_out_1_BUS16_S3_T0

FF000028 000AF000
# data[(5, 0)] : alu_op = add
# data[(6, 6)] : unsigned=0x0
# data[(15, 12] : flag_sel: PE_FLAG_PE=0xF
# data[(17, 16)]: data0: REG_BYPASS=0x2
# data[(19, 18)]: data1: REG_BYPASS=0x2

00020028 00000007
# data[(3, 0)] : @ tile (3, 2) connect wire 7 (out_BUS16_S2_T2) to data0

00030028 00000009
# data[(3, 0)] : @ tile (3, 2) connect wire 9 (out_BUS16_S1_T4) to data1

00080028 00030802
# data[(1, 0)] : @ tile (3, 2) connect wire 2 (in_BUS16_S3_T0) to out_BUS16_S0_T0
# data[(11, 10)] : @ tile (3, 2) connect wire 2 (in_BUS16_S3_T0) to out_BUS16_S1_T0
# data[(17, 16)] : @ tile (3, 2) connect wire 3 (pe_out_res) to out_BUS16_S1_T3
# data[(19, 18)] : @ tile (3, 2) connect wire 0 (in_BUS16_S0_T4) to out_BUS16_S1_T4
# data[(25, 24)] : @ tile (3, 2) connect wire 0 (in_BUS16_S0_T2) to out_BUS16_S2_T2

FF000029 000AF000
# data[(5, 0)] : alu_op = add
# data[(6, 6)] : unsigned=0x0
# data[(15, 12] : flag_sel: PE_FLAG_PE=0xF
# data[(17, 16)]: data0: REG_BYPASS=0x2
# data[(19, 18)]: data1: REG_BYPASS=0x2

00020029 00000006
# data[(3, 0)] : @ tile (3, 3) connect wire 6 (out_BUS16_S2_T1) to data0

00030029 00000008
# data[(3, 0)] : @ tile (3, 3) connect wire 8 (out_BUS16_S1_T3) to data1

00080029 83400800
# data[(11, 10)] : @ tile (3, 3) connect wire 2 (in_BUS16_S3_T0) to out_BUS16_S1_T0
# data[(17, 16)] : @ tile (3, 3) connect wire 0 (in_BUS16_S0_T3) to out_BUS16_S1_T3
# data[(23, 22)] : @ tile (3, 3) connect wire 1 (in_BUS16_S1_T1) to out_BUS16_S2_T1
# data[(25, 24)] : @ tile (3, 3) connect wire 3 (pe_out_res) to out_BUS16_S2_T2
# data[(29, 28)] : @ tile (3, 3) connect wire 0 (in_BUS16_S0_T4) to out_BUS16_S2_T4
# data[(31, 30)] : @ tile (3, 3) connect wire 2 (in_BUS16_S2_T0) to out_BUS16_S3_T0

F100002A 00000000
# data[(15, 0)] : init `data1` reg with const `0`

FF00002A 0002F00B
# data[(5, 0)] : alu_op = mul
# data[(6, 6)] : unsigned=0x0
# data[(15, 12] : flag_sel: PE_FLAG_PE=0xF
# data[(17, 16)]: data0: REG_BYPASS=0x2
# data[(19, 18)]: data1: REG_CONST= 0x0

0002002A 00000007
# data[(3, 0)] : @ tile (3, 4) connect wire 7 (out_BUS16_S2_T2) to data0

0008002A 30082000
# data[(13, 12)] : @ tile (3, 4) connect wire 2 (in_BUS16_S3_T1) to out_BUS16_S1_T1
# data[(19, 18)] : @ tile (3, 4) connect wire 2 (in_BUS16_S3_T4) to out_BUS16_S1_T4
# data[(25, 24)] : @ tile (3, 4) connect wire 0 (in_BUS16_S0_T2) to out_BUS16_S2_T2
# data[(27, 26)] : @ tile (3, 4) connect wire 0 (in_BUS16_S0_T3) to out_BUS16_S2_T3
# data[(29, 28)] : @ tile (3, 4) connect wire 3 (pe_out_res) to out_BUS16_S2_T4

0008002B 02000020
# data[(5, 4)] : @ tile (3, 6) connect wire 2 (in_BUS16_S3_T2) to out_BUS16_S0_T2
# data[(25, 24)] : @ tile (3, 6) connect wire 2 (in_BUS16_S3_T2) to out_BUS16_S2_T2
# data[(27, 26)] : @ tile (3, 6) connect wire 0 (in_BUS16_S0_T3) to out_BUS16_S2_T3

F100002C 0000000C
# data[(15, 0)] : init `data1` reg with const `12`

FF00002C 0003F00B
# data[(5, 0)] : alu_op = mul
# data[(6, 6)] : unsigned=0x0
# data[(15, 12] : flag_sel: PE_FLAG_PE=0xF
# data[(17, 16)]: data0: REG_DELAY= 0x3
# data[(19, 18)]: data1: REG_CONST= 0x0

0002002C 00000002
# data[(3, 0)] : @ tile (3, 7) connect wire 2 (in_BUS16_S2_T2) to data0

0008002C 0C000000
# data[(27, 26)] : @ tile (3, 7) connect wire 3 (pe_out_res) to out_BUS16_S2_T3

FF000036 000AF000
# data[(5, 0)] : alu_op = add
# data[(6, 6)] : unsigned=0x0
# data[(15, 12] : flag_sel: PE_FLAG_PE=0xF
# data[(17, 16)]: data0: REG_BYPASS=0x2
# data[(19, 18)]: data1: REG_BYPASS=0x2

00020036 00000008
# data[(3, 0)] : @ tile (4, 2) connect wire 8 (out_BUS16_S2_T3) to data0

00030036 00000006
# data[(3, 0)] : @ tile (4, 2) connect wire 6 (out_BUS16_S1_T1) to data1

00080036 080C0800
# data[(11, 10)] : @ tile (4, 2) connect wire 2 (in_BUS16_S3_T0) to out_BUS16_S1_T0
# data[(13, 12)] : @ tile (4, 2) connect wire 0 (in_BUS16_S0_T1) to out_BUS16_S1_T1
# data[(19, 18)] : @ tile (4, 2) connect wire 3 (pe_out_res) to out_BUS16_S1_T4
# data[(27, 26)] : @ tile (4, 2) connect wire 2 (in_BUS16_S3_T3) to out_BUS16_S2_T3

FF000037 000AF000
# data[(5, 0)] : alu_op = add
# data[(6, 6)] : unsigned=0x0
# data[(15, 12] : flag_sel: PE_FLAG_PE=0xF
# data[(17, 16)]: data0: REG_BYPASS=0x2
# data[(19, 18)]: data1: REG_BYPASS=0x2

00020037 00000005
# data[(3, 0)] : @ tile (4, 3) connect wire 5 (out_BUS16_S2_T0) to data0

00030037 00000003
# data[(3, 0)] : @ tile (4, 3) connect wire 3 (in_BUS16_S1_T3) to data1

00080037 00000800
# data[(11, 10)] : @ tile (4, 3) connect wire 2 (in_BUS16_S3_T0) to out_BUS16_S1_T0
# data[(21, 20)] : @ tile (4, 3) connect wire 0 (in_BUS16_S0_T0) to out_BUS16_S2_T0
# data[(23, 22)] : @ tile (4, 3) connect wire 0 (in_BUS16_S0_T1) to out_BUS16_S2_T1

01080037 00000003
# data[(33, 32)] : @ tile (4, 3) connect wire 3 (pe_out_res) to out_BUS16_S3_T1

F1000038 00000011
# data[(15, 0)] : init `data1` reg with const `17`

FF000038 0002F00B
# data[(5, 0)] : alu_op = mul
# data[(6, 6)] : unsigned=0x0
# data[(15, 12] : flag_sel: PE_FLAG_PE=0xF
# data[(17, 16)]: data0: REG_BYPASS=0x2
# data[(19, 18)]: data1: REG_CONST= 0x0

00020038 00000008
# data[(3, 0)] : @ tile (4, 4) connect wire 8 (out_BUS16_S2_T3) to data0

00080038 00B80000
# data[(19, 18)] : @ tile (4, 4) connect wire 2 (in_BUS16_S3_T4) to out_BUS16_S1_T4
# data[(21, 20)] : @ tile (4, 4) connect wire 3 (pe_out_res) to out_BUS16_S2_T0
# data[(23, 22)] : @ tile (4, 4) connect wire 2 (in_BUS16_S3_T1) to out_BUS16_S2_T1
# data[(27, 26)] : @ tile (4, 4) connect wire 0 (in_BUS16_S0_T3) to out_BUS16_S2_T3

00000039 00000000
# data[(32, 30)] : @ tile (4, 5) connect wire 0 (in_0_BUS1_0_0) to out_0_BUS1_2_0 (REG 00)
# da99[(31, 30)] : REG_FIELD_HACK (bsbuilder.py) hand-written code above

01000039 00000000
# data[(32, 30)] : @ tile (4, 5) connect wire 0 (in_0_BUS1_0_0) to out_0_BUS1_2_0 (REG 01)
# da99[(32, 32)] : REG_FIELD_HACK (bsbuilder.py) hand-written code above

00020039 0C200300
# data[(9, 8)] : @ tile (4, 5) connect wire 3 (rdata) to out_0_BUS16_S0_T4
# data[(21, 20)] : @ tile (4, 5) connect wire 2 (in_0_BUS16_S3_T0) to out_0_BUS16_S2_T0
# data[(27, 26)] : @ tile (4, 5) connect wire 3 (rdata) to out_0_BUS16_S2_T3

01020039 00001000
# data[(44, 44)] : @ tile (4, 5) latch output wire out_0_BUS16_S0_T4

00030039 00000001
# data[(1, 0)] : @ tile (4, 5) connect wire 1 (in_1_BUS16_S2_T0) to out_1_BUS16_S0_T0

00040039 00000204
# data[(1, 0)] : mode = linebuffer
# data[(2, 2)] : tile_en = 1
# data[(15, 3)] : fifo_depth = 64
# data[(18, 16)] : almost_full_count = 0
# data[(19, 19)] : chain_enable = 0

000B0039 00000005
# data[(3, 0)] : @ tile (4, 5) connect wire 5 (out_0_BUS16_S2_T0) to wdata

000E0039 00000005
# data[(3, 0)] : @ tile (4, 5) connect wire 5 (out_0_BUS1_S2_T0) to wen

0000003A 000000FF
# data[(7, 0)] : lut_value = 0xFF

F300003A 00000000
# data[(0, 0)] : init `bit0` reg with const `0`

F400003A 00000000
# data[(0, 0)] : init `bit1` reg with const `0`

F500003A 00000000
# data[(0, 0)] : init `bit2` reg with const `0`

FF00003A 0000E00E
# data[(5, 0)] : alu_op = lut ; 0xE
# data[(6, 6)] : unsigned=0x0
# data[(15, 12] : flag_sel: PE_FLAG_LUT=0xE
# data[(25, 24)]: bit0: REG_CONST= 0x0
# data[(27, 26)]: bit1: REG_CONST= 0x0
# data[(29, 28)]: bit2: REG_CONST= 0x0

0008003A 00040000
# data[(19, 18)] : @ tile (4, 6) connect wire 1 (in_BUS16_S2_T4) to out_BUS16_S1_T4

0009003A 00300000
# data[(21, 20)] : @ tile (4, 6) connect wire 3 (pe_out_res_p) to out_BUS1_S2_T0

F100003B 00000000
# data[(15, 0)] : init `data1` reg with const `0`

FF00003B 0002F000
# data[(5, 0)] : alu_op = add
# data[(6, 6)] : unsigned=0x0
# data[(15, 12] : flag_sel: PE_FLAG_PE=0xF
# data[(17, 16)]: data0: REG_BYPASS=0x2
# data[(19, 18)]: data1: REG_CONST= 0x0

0002003B 00000009
# data[(3, 0)] : @ tile (4, 7) connect wire 9 (out_BUS16_S2_T4) to data0

0008003B 10000C00
# data[(11, 10)] : @ tile (4, 7) connect wire 3 (pe_out_res) to out_BUS16_S1_T0
# data[(29, 28)] : @ tile (4, 7) connect wire 1 (in_BUS16_S1_T4) to out_BUS16_S2_T4

0003003D 00000001
# data[(1, 0)] : @ tile (4, 9) connect wire 1 (in_1_BUS16_S2_T0) to out_1_BUS16_S0_T0

00030041 00000001
# data[(1, 0)] : @ tile (4, 13) connect wire 1 (in_1_BUS16_S2_T0) to out_1_BUS16_S0_T0

00020045 40000000
# data[(31, 30)] : @ tile (4, 17) connect wire 1 (sb_wire_out_1_BUS16_S3_T0) to out_0_BUS16_S3_T0

00030045 80000000
# data[(31, 30)] : @ tile (4, 17) connect wire 2 (in_1_BUS16_S2_T0) to sb_wire_out_1_BUS16_S3_T0

FF000048 000AF000
# data[(5, 0)] : alu_op = add
# data[(6, 6)] : unsigned=0x0
# data[(15, 12] : flag_sel: PE_FLAG_PE=0xF
# data[(17, 16)]: data0: REG_BYPASS=0x2
# data[(19, 18)]: data1: REG_BYPASS=0x2

00020048 00000009
# data[(3, 0)] : @ tile (5, 2) connect wire 9 (out_BUS16_S2_T4) to data0

00030048 00000001
# data[(3, 0)] : @ tile (5, 2) connect wire 1 (in_BUS16_S1_T1) to data1

00080048 20000803
# data[(1, 0)] : @ tile (5, 2) connect wire 3 (pe_out_res) to out_BUS16_S0_T0
# data[(11, 10)] : @ tile (5, 2) connect wire 2 (in_BUS16_S3_T0) to out_BUS16_S1_T0
# data[(29, 28)] : @ tile (5, 2) connect wire 2 (in_BUS16_S3_T4) to out_BUS16_S2_T4

FF000049 000AF000
# data[(5, 0)] : alu_op = add
# data[(6, 6)] : unsigned=0x0
# data[(15, 12] : flag_sel: PE_FLAG_PE=0xF
# data[(17, 16)]: data0: REG_BYPASS=0x2
# data[(19, 18)]: data1: REG_BYPASS=0x2

00020049 00000000
# data[(3, 0)] : @ tile (5, 3) connect wire 0 (in_BUS16_S2_T0) to data0

00030049 00000005
# data[(3, 0)] : @ tile (5, 3) connect wire 5 (out_BUS16_S1_T0) to data1

00080049 0000080C
# data[(3, 2)] : @ tile (5, 3) connect wire 3 (pe_out_res) to out_BUS16_S0_T1
# data[(11, 10)] : @ tile (5, 3) connect wire 2 (in_BUS16_S3_T0) to out_BUS16_S1_T0

01080049 00000010
# data[(37, 36)] : @ tile (5, 3) connect wire 1 (in_BUS16_S1_T3) to out_BUS16_S3_T3

FF00004A 000AF000
# data[(5, 0)] : alu_op = add
# data[(6, 6)] : unsigned=0x0
# data[(15, 12] : flag_sel: PE_FLAG_PE=0xF
# data[(17, 16)]: data0: REG_BYPASS=0x2
# data[(19, 18)]: data1: REG_BYPASS=0x2

0002004A 00000001
# data[(3, 0)] : @ tile (5, 4) connect wire 1 (in_BUS16_S2_T1) to data0

0003004A 00000009
# data[(3, 0)] : @ tile (5, 4) connect wire 9 (out_BUS16_S1_T4) to data1

0008004A 00080003
# data[(1, 0)] : @ tile (5, 4) connect wire 3 (pe_out_res) to out_BUS16_S0_T0
# data[(19, 18)] : @ tile (5, 4) connect wire 2 (in_BUS16_S3_T4) to out_BUS16_S1_T4

F100004B 0000000E
# data[(15, 0)] : init `data1` reg with const `14`

FF00004B 0002F00B
# data[(5, 0)] : alu_op = mul
# data[(6, 6)] : unsigned=0x0
# data[(15, 12] : flag_sel: PE_FLAG_PE=0xF
# data[(17, 16)]: data0: REG_BYPASS=0x2
# data[(19, 18)]: data1: REG_CONST= 0x0

0002004B 00000009
# data[(3, 0)] : @ tile (5, 6) connect wire 9 (out_BUS16_S2_T4) to data0

0008004B 2000C201
# data[(1, 0)] : @ tile (5, 6) connect wire 1 (in_BUS16_S2_T0) to out_BUS16_S0_T0
# data[(9, 8)] : @ tile (5, 6) connect wire 2 (in_BUS16_S3_T4) to out_BUS16_S0_T4
# data[(15, 14)] : @ tile (5, 6) connect wire 3 (pe_out_res) to out_BUS16_S1_T2
# data[(29, 28)] : @ tile (5, 6) connect wire 2 (in_BUS16_S3_T4) to out_BUS16_S2_T4

F100004C 0000000B
# data[(15, 0)] : init `data1` reg with const `11`

FF00004C 0003F00B
# data[(5, 0)] : alu_op = mul
# data[(6, 6)] : unsigned=0x0
# data[(15, 12] : flag_sel: PE_FLAG_PE=0xF
# data[(17, 16)]: data0: REG_DELAY= 0x3
# data[(19, 18)]: data1: REG_CONST= 0x0

0002004C 00000004
# data[(3, 0)] : @ tile (5, 7) connect wire 4 (in_BUS16_S2_T4) to data0

0008004C 00000801
# data[(1, 0)] : @ tile (5, 7) connect wire 1 (in_BUS16_S2_T0) to out_BUS16_S0_T0
# data[(11, 10)] : @ tile (5, 7) connect wire 2 (in_BUS16_S3_T0) to out_BUS16_S1_T0

0108004C 000000C0
# data[(39, 38)] : @ tile (5, 7) connect wire 3 (pe_out_res) to out_BUS16_S3_T4

0008004D 00000001
# data[(1, 0)] : @ tile (5, 8) connect wire 1 (in_BUS16_S2_T0) to out_BUS16_S0_T0

0008004E 00000001
# data[(1, 0)] : @ tile (5, 10) connect wire 1 (in_BUS16_S2_T0) to out_BUS16_S0_T0

0008004F 00000001
# data[(1, 0)] : @ tile (5, 11) connect wire 1 (in_BUS16_S2_T0) to out_BUS16_S0_T0

00080050 00000001
# data[(1, 0)] : @ tile (5, 12) connect wire 1 (in_BUS16_S2_T0) to out_BUS16_S0_T0

00080051 00000001
# data[(1, 0)] : @ tile (5, 14) connect wire 1 (in_BUS16_S2_T0) to out_BUS16_S0_T0

00080052 00000001
# data[(1, 0)] : @ tile (5, 15) connect wire 1 (in_BUS16_S2_T0) to out_BUS16_S0_T0

00080053 00000001
# data[(1, 0)] : @ tile (5, 16) connect wire 1 (in_BUS16_S2_T0) to out_BUS16_S0_T0

F1000056 0000000D
# data[(15, 0)] : init `data1` reg with const `13`

FF000056 0003F00B
# data[(5, 0)] : alu_op = mul
# data[(6, 6)] : unsigned=0x0
# data[(15, 12] : flag_sel: PE_FLAG_PE=0xF
# data[(17, 16)]: data0: REG_DELAY= 0x3
# data[(19, 18)]: data1: REG_CONST= 0x0

00020056 00000005
# data[(3, 0)] : @ tile (6, 2) connect wire 5 (out_BUS16_S2_T0) to data0

00080056 00200000
# data[(21, 20)] : @ tile (6, 2) connect wire 2 (in_BUS16_S3_T0) to out_BUS16_S2_T0

01080056 00000003
# data[(33, 32)] : @ tile (6, 2) connect wire 3 (pe_out_res) to out_BUS16_S3_T1

01080057 00000000
# data[(37, 36)] : @ tile (6, 3) connect wire 0 (in_BUS16_S0_T3) to out_BUS16_S3_T3

00080058 00000000
# data[(27, 26)] : @ tile (6, 4) connect wire 0 (in_BUS16_S0_T3) to out_BUS16_S2_T3

00020059 00000000
# data[(27, 26)] : @ tile (6, 5) connect wire 0 (in_0_BUS16_S0_T3) to out_0_BUS16_S2_T3

FF00005A 000AF000
# data[(5, 0)] : alu_op = add
# data[(6, 6)] : unsigned=0x0
# data[(15, 12] : flag_sel: PE_FLAG_PE=0xF
# data[(17, 16)]: data0: REG_BYPASS=0x2
# data[(19, 18)]: data1: REG_BYPASS=0x2

0002005A 00000007
# data[(3, 0)] : @ tile (6, 6) connect wire 7 (out_BUS16_S2_T2) to data0

0003005A 00000005
# data[(3, 0)] : @ tile (6, 6) connect wire 5 (out_BUS16_S1_T0) to data1

0008005A 0E000000
# data[(11, 10)] : @ tile (6, 6) connect wire 0 (in_BUS16_S0_T0) to out_BUS16_S1_T0
# data[(25, 24)] : @ tile (6, 6) connect wire 2 (in_BUS16_S3_T2) to out_BUS16_S2_T2
# data[(27, 26)] : @ tile (6, 6) connect wire 3 (pe_out_res) to out_BUS16_S2_T3

0008005B 00200000
# data[(21, 20)] : @ tile (6, 7) connect wire 2 (in_BUS16_S3_T0) to out_BUS16_S2_T0

# INPUT  tile  21 ( 2, 2) / in_BUS16_S2_T0 / wire_2_1_BUS16_S0_T0
# OUTPUT tile  36 ( 2,17) / out_0_BUS16_S0_T0 / wire_2_17_BUS16_S0_T0

# Configure side 0 (right side) io1bit tiles as 16bit output bus;
# assumes output is tile 36 (io16bit_0x24)

00000026 00000001
00000034 00000001
00000046 00000001
00000054 00000001
00000066 00000001
00000074 00000001
00000086 00000001
00000094 00000001
000000A6 00000001
000000B4 00000001
000000C6 00000001
000000D4 00000001
000000E6 00000001
000000F4 00000001
00000106 00000001
00000114 00000001

